@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    body {
        font: 10px sans-serif;
    }

    .y.axisRight text {
        fill: orange;
    }

    .y.axisLeft text {
        fill: steelblue;
    }

    .axis path,
    .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }

    .bar1 {
        fill: steelblue;
    }

    .bar2 {
        fill: orange;
    }

    .x.axis path {
        display: none;
    }
</style>
<script>

    $.ajax({
        url: "http://localhost:3057/Analysis/AverageScoreOfChineseAndNonChineseByInspector/",
        dataType: "json",
        success: function (data) {

            var margin = { top: 80, right: 80, bottom: 80, left: 80 },
                width = 1000 - margin.left - margin.right,
                height = 400 - margin.top - margin.bottom;

            var x = d3.scale.ordinal()
                .rangeRoundBands([0, width], .1);

            var y = d3.scale.linear().domain([80, 100]).range([height, 0]);

            var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom");

            // create left yAxis
            var yAxisLeft = d3.svg.axis().scale(y).ticks(4).orient("left");
            // create right yAxis
            var yAxisRight = d3.svg.axis().scale(y).ticks(4).orient("right");

            var svg = d3.select("body").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("class", "graph")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

            x.domain(data.map(function (d) { return d.Item1; }));
            y.domain([80, d3.max(data, function (d) { return d.Item2; })]);
            //y.domain([0, d3.max(data, function (d) { return d.Item2; })]);

            svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + height + ")")
                .call(xAxis);

            svg.append("g")
                .attr("class", "y axis axisLeft")
                .attr("transform", "translate(0,0)")
                .call(yAxisLeft)
                .append("text")
                .attr("y", 6)
                .attr("dy", "-2em")
                .style("text-anchor", "end")
                .text("Chinese Score");

            svg.append("g")
                .attr("class", "y axis axisRight")
                .attr("transform", "translate(" + (width) + ",0)")
                .call(yAxisRight)
                .append("text")
                .attr("y", 6)
                .attr("dy", "-2em")
                .attr("dx", "2em")
                .style("text-anchor", "end")
                .text("Non-Chinese Score");

            bars = svg.selectAll(".bar").data(data).enter();

            bars.append("rect")
                .attr("class", "bar1")
                .attr("x", function (d) { return x(d.Item1); })
                .attr("width", x.rangeBand() / 2)
                .attr("y", function (d) { return y(d.Item2); })
                .attr("height", function (d, i, j) { return height - y(d.Item2); });

            bars.append("rect")
                .attr("class", "bar2")
                .attr("x", function (d) { return x(d.Item1) + x.rangeBand() / 2; })
                .attr("width", x.rangeBand() / 2)
                .attr("y", function (d) { return y(d.Item3); })
                .attr("height", function (d, i, j) { return height - y(d.Item3); });

        },
        error: function (e) {
            alert("error");
        }
    });

    //function type(d) {
    //    d.money = +d.money;
    //    return d;
    //}

</script>

